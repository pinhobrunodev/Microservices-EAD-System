server:
  port: ${PORT:0}
  servlet:
    context-path: '/ead-course/' # Default RequestMapping

spring:
  application:
    name: ead-course-service
  datasource:
    url: jdbc:postgresql://localhost:5432/ead-course-v2
    username: postgres
    password: 123

  jpa:
    hibernate:
      ddl-auto: update
      dialect: org.hibernate.dialect.PostgreSQLDialect
      jdbc:
        lob.non-contextual-creation:true
    properties:
      hibernate:
        show_sql: true
  output:
    ansi:
      enabled: always
  rabbitmq:
    addresses: amqps://eratseqp:pl2pjg1iStqdt50Nppk-zY_1EXGE6Ijp@fish.rmq.cloudamqp.com/eratseqp
# Log Level of Application
logging:
  level:
    com.ead: TRACE
    root: INFO # More details but not of Everything
    org.springframework.web: DEBUG # Log to see into the Requests
    org.hibernate: INFO  # Log to see the Hibernate

ead:
  api:
    url:
        authuser: 'http://ead-authuser-service/ead-authuser'
  broker:
    exchange:
        userEventExchange: ead.userevent
    queue:
      userEventQueue:
        name: ead.userevent.ms.course # Queue that Course-MS will be listening referee to ead.userevent exchange

eureka:
  client:
    service-url:
      defaultZone: 'http://localhost:8761/eureka'
      instance:
        hostname: localhost
  instance:
    instance-id: ${spring.application.name}:${random.value}